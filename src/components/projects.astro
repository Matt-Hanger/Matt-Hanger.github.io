---
import bottomskillswave from "../assets/images/bottomskillswave.png";
import climbs from "../assets/images/climbs.jpg";
import quoteplan from "../assets/images/quoteplan.jpg";
import tinyhouse from "../assets/images/tinyhouse.jpg";
import japan from "../assets/images/japan.jpg";
---

<div class="flex">
  <div class="w-screen">
    <img class="object-fill w-screen" src={bottomskillswave} alt="waves" />
    <div
      id="projects"
      class="flex flex-col mx-auto sm:max-w-[65%] max-w-[85%] my-10 gap-7"
    >
      <div>
        <h1 class="text-orange-700 text-center p-10 text-5xl">Projects</h1>
      </div>
      <div class="grid 2xl:grid-cols-4 lg:grid-cols-2 grid-cols-1 gap-7">
        <div
          class="rounded-lg shadow-lg hover:shadow-xl hover:scale-[1.03] hover:-translate-y-1 w-full bg-orange-50 overflow-hidden transition ease-in-out delay-100"
        >
          <img
            src={tinyhouse}
            class="w-[100%] object-cover h-[300px] object-center"
          />
          <div class="p-5">
            <h2 class="mt-[8px] mb-[12px] text-xl font-bold">Tiny House</h2>
            <div class="summary">
              In the last article, we implemented a simple dense network to
              recognize MNIST images with PyTorch. In this article, we’ll stay
              with the MNIST recognition task, but this time we’ll use
              convolutional networks...
            </div>
            <div class="flex flex-row flex-wrap items-center p-5 pr-5">
              <div
                class="text-[#738a94] text-[0.9rem] leading-[0.9rem] font-medium"
              >
                Links
              </div>
            </div>
          </div>
        </div>
        <div
          class="rounded-lg shadow-lg hover:shadow-xl hover:scale-[1.03] hover:-translate-y-1 w-full bg-orange-50 overflow-hidden transition ease-in-out delay-100"
        >
          <img
            src={quoteplan}
            class="w-[100%] object-cover h-[300px] object-center"
          />
          <div class="p-5">
            <h2 class="mt-[8px] mb-[12px] text-xl font-bold">Easy Quote</h2>
            <div class="summary">
              In the last article, we implemented a simple dense network to
              recognize MNIST images with PyTorch. In this article, we’ll stay
              with the MNIST recognition task, but this time we’ll use
              convolutional networks...
            </div>
            <div class="flex flex-row flex-wrap items-center p-5 pr-5">
              <div
                class="text-[#738a94] text-[0.9rem] leading-[0.9rem] font-medium"
              >
                Links
              </div>
            </div>
          </div>
        </div>
        <div
          class="rounded-lg shadow-lg hover:shadow-xl hover:scale-[1.03] hover:-translate-y-1 w-full bg-orange-50 overflow-hidden transition ease-in-out delay-100"
        >
          <img
            src={climbs}
            class="w-[100%] object-cover h-[300px] object-center"
          />
          <div class="p-5">
            <h2 class="mt-[8px] mb-[12px] text-xl font-bold">Climbs</h2>
            <div class="summary">
              In the last article, we implemented a simple dense network to
              recognize MNIST images with PyTorch. In this article, we’ll stay
              with the MNIST recognition task, but this time we’ll use
              convolutional networks...
            </div>
            <div class="flex flex-row flex-wrap items-center p-5 pr-5">
              <div
                class="text-[#738a94] text-[0.9rem] leading-[0.9rem] font-medium"
              >
                Links
              </div>
            </div>
          </div>
        </div>
        <div
          class="rounded-lg shadow-lg hover:shadow-xl hover:scale-[1.03] hover:-translate-y-1 w-full bg-orange-50 overflow-hidden transition ease-in-out delay-100"
        >
          <img
            src={japan}
            class="w-[100%] object-cover h-[300px] object-center"
          />
          <div class="p-5">
            <h2 class="mt-[8px] mb-[12px] text-xl font-bold">TBA</h2>
            <div class="summary">
              In the last article, we implemented a simple dense network to
              recognize MNIST images with PyTorch. In this article, we’ll stay
              with the MNIST recognition task, but this time we’ll use
              convolutional networks...
            </div>
            <div class="flex flex-row flex-wrap items-center p-5 pr-5">
              <div
                class="text-[#738a94] text-[0.9rem] leading-[0.9rem] font-medium"
              >
                Links
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
